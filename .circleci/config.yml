version: 2 # use CircleCI 2.0　2.0を使用する際は2とする
jobs: # a collection of steps　ステップ集の集まり
  build: # runs not using Workflows must have a `build` job as entry point　ワークフローを使用しない実行ではエントリポイントとして `build`ジョブが必要
    
    working_directory: ~/spring-fortune # directory where steps will run　ステップが実行されるディレクトリ

    docker: # run the steps with Docker　dockerでステップを実行する
      - image: circleci/openjdk:8-jdk # ...with this image as the primary container; this is where all `steps` will run　すべての `steps`が実行される場所

    steps: # a collection of executable commands　実行可能コマンドのコレクション

      - checkout # check out source code to working directory　作業ディレクトリへのソースコードのチェックアウト

      - run: mvn dependency:go-offline # gets the project dependencies　プロジェクトの依存関係を取得

      - persist_to_workspace:
          root: .
          paths:
            - .

  test: # runs not using Workflows must have a `build` job as entry point　ワークフローを使用しない実行ではエントリポイントとして `build`ジョブが必要

    working_directory: ~/spring-fortune # directory where steps will run　ステップが実行されるディレクトリ

    docker: # run the steps with Docker　dockerでステップを実行する
      - image: circleci/openjdk:8-jdk # ...with this image as the primary container; this is where all `steps` will run　すべての `steps`が実行される場所

    steps: # a collection of executable commands　実行可能コマンドのコレクション

      - attach_workspace: # workspaceをアタッチする
          at: .

      - run: mvn test # テストの実行

  deploy:

    working_directory: ~/spring-fortune # directory where steps will run　ステップが実行されるディレクトリ

    docker: # run the steps with Docker　dockerでステップを実行する
      - image: circleci/openjdk:8-jdk # ...with this image as the primary container; this is where all `steps` will run　すべての `steps`が実行される場所

    steps:
      - attach_workspace:
          at: .

      - run: echo deploy

workflows:
  version: 2
  build_and_test: # workflow名
    jobs:
      - build
      - test:
          requires: # buildが成功したら実行する
            - build
      - deploy:
          requires:
            - build
            - test
          filters: # 実行したいブランチ
            branches:
              only: master