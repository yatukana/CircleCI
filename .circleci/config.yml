version: 2 # use CircleCI 2.0　2.0を使用する際は2とする
jobs: # a collection of steps　ステップ集の集まり
  build: # runs not using Workflows must have a `build` job as entry point　ワークフローを使用しない実行ではエントリポイントとして `build`ジョブが必要
    
    working_directory: ~/spring-fortune # directory where steps will run　ステップが実行されるディレクトリ

    docker: # run the steps with Docker　dockerでステップを実行する
      - image: circleci/openjdk:8-jdk # ...with this image as the primary container; this is where all `steps` will run　すべての `steps`が実行される場所

    steps: # a collection of executable commands　実行可能コマンドのコレクション

      - checkout # check out source code to working directory　作業ディレクトリへのソースコードのチェックアウト

      - run: mvn dependency:go-offline # gets the project dependencies　プロジェクトの依存関係を取得

  test: # runs not using Workflows must have a `build` job as entry point　ワークフローを使用しない実行ではエントリポイントとして `build`ジョブが必要

    working_directory: ~/spring-fortune # directory where steps will run　ステップが実行されるディレクトリ

    docker: # run the steps with Docker　dockerでステップを実行する
      - image: circleci/openjdk:8-jdk # ...with this image as the primary container; this is where all `steps` will run　すべての `steps`が実行される場所

    steps: # a collection of executable commands　実行可能コマンドのコレクション

      - checkout # check out source code to working directory　作業ディレクトリへのソースコードのチェックアウト

      - run: mvn dependency:go-offline # gets the project dependencies　プロジェクトの依存関係を取得

      - run: mvn test # テストの実行

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
      # CircleCIダッシュボードに表示できるように、 `target / surefire-reports`ディレクトリからテストメタデータをアップロード
          path: target/surefire-reports

      - store_artifacts: # store the uberjar as an artifact　uberjarを成果物として保管する
          path: target/spring-fortune-0.0.1-SNAPSHOT.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      
    post:
      - mkdir -p $CIRCLE_TEST_REPORTS/junit/
      - find . -type f -regex ".*/test-results/*/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;

workflows:
  version: 2
  build_and_test: # workflow名
    jobs:
      - build
      - test:
          requires: # buildが成功したら実行する
            - build